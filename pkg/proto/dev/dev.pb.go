// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kelda/dev/v0/dev.proto

package dev

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	errors "github.com/sidkik/kelda-v1/pkg/proto/errors"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetTargetVersionRequest struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTargetVersionRequest) Reset()         { *m = SetTargetVersionRequest{} }
func (m *SetTargetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*SetTargetVersionRequest) ProtoMessage()    {}
func (*SetTargetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{0}
}

func (m *SetTargetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTargetVersionRequest.Unmarshal(m, b)
}
func (m *SetTargetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTargetVersionRequest.Marshal(b, m, deterministic)
}
func (m *SetTargetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTargetVersionRequest.Merge(m, src)
}
func (m *SetTargetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_SetTargetVersionRequest.Size(m)
}
func (m *SetTargetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTargetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTargetVersionRequest proto.InternalMessageInfo

func (m *SetTargetVersionRequest) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type SetTargetVersionResponse struct {
	Error                *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetTargetVersionResponse) Reset()         { *m = SetTargetVersionResponse{} }
func (m *SetTargetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*SetTargetVersionResponse) ProtoMessage()    {}
func (*SetTargetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{1}
}

func (m *SetTargetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTargetVersionResponse.Unmarshal(m, b)
}
func (m *SetTargetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTargetVersionResponse.Marshal(b, m, deterministic)
}
func (m *SetTargetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTargetVersionResponse.Merge(m, src)
}
func (m *SetTargetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_SetTargetVersionResponse.Size(m)
}
func (m *SetTargetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTargetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetTargetVersionResponse proto.InternalMessageInfo

func (m *SetTargetVersionResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetMirrorSnapshotRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMirrorSnapshotRequest) Reset()         { *m = GetMirrorSnapshotRequest{} }
func (m *GetMirrorSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*GetMirrorSnapshotRequest) ProtoMessage()    {}
func (*GetMirrorSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{2}
}

func (m *GetMirrorSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMirrorSnapshotRequest.Unmarshal(m, b)
}
func (m *GetMirrorSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMirrorSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *GetMirrorSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMirrorSnapshotRequest.Merge(m, src)
}
func (m *GetMirrorSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_GetMirrorSnapshotRequest.Size(m)
}
func (m *GetMirrorSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMirrorSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMirrorSnapshotRequest proto.InternalMessageInfo

type GetMirrorSnapshotResponse struct {
	Snapshot             *MirrorSnapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Error                *errors.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetMirrorSnapshotResponse) Reset()         { *m = GetMirrorSnapshotResponse{} }
func (m *GetMirrorSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*GetMirrorSnapshotResponse) ProtoMessage()    {}
func (*GetMirrorSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{3}
}

func (m *GetMirrorSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMirrorSnapshotResponse.Unmarshal(m, b)
}
func (m *GetMirrorSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMirrorSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *GetMirrorSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMirrorSnapshotResponse.Merge(m, src)
}
func (m *GetMirrorSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_GetMirrorSnapshotResponse.Size(m)
}
func (m *GetMirrorSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMirrorSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMirrorSnapshotResponse proto.InternalMessageInfo

func (m *GetMirrorSnapshotResponse) GetSnapshot() *MirrorSnapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *GetMirrorSnapshotResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// This is the transport format for the sync.MirrorSnapshot type.
type MirrorSnapshot struct {
	Files                map[string]*MirrorFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MirrorSnapshot) Reset()         { *m = MirrorSnapshot{} }
func (m *MirrorSnapshot) String() string { return proto.CompactTextString(m) }
func (*MirrorSnapshot) ProtoMessage()    {}
func (*MirrorSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{4}
}

func (m *MirrorSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirrorSnapshot.Unmarshal(m, b)
}
func (m *MirrorSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirrorSnapshot.Marshal(b, m, deterministic)
}
func (m *MirrorSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirrorSnapshot.Merge(m, src)
}
func (m *MirrorSnapshot) XXX_Size() int {
	return xxx_messageInfo_MirrorSnapshot.Size(m)
}
func (m *MirrorSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_MirrorSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_MirrorSnapshot proto.InternalMessageInfo

func (m *MirrorSnapshot) GetFiles() map[string]*MirrorFile {
	if m != nil {
		return m.Files
	}
	return nil
}

type MirrorFileRequest struct {
	Header               *MirrorFile `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Chunk                []byte      `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MirrorFileRequest) Reset()         { *m = MirrorFileRequest{} }
func (m *MirrorFileRequest) String() string { return proto.CompactTextString(m) }
func (*MirrorFileRequest) ProtoMessage()    {}
func (*MirrorFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{5}
}

func (m *MirrorFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirrorFileRequest.Unmarshal(m, b)
}
func (m *MirrorFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirrorFileRequest.Marshal(b, m, deterministic)
}
func (m *MirrorFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirrorFileRequest.Merge(m, src)
}
func (m *MirrorFileRequest) XXX_Size() int {
	return xxx_messageInfo_MirrorFileRequest.Size(m)
}
func (m *MirrorFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MirrorFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MirrorFileRequest proto.InternalMessageInfo

func (m *MirrorFileRequest) GetHeader() *MirrorFile {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MirrorFileRequest) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type MirrorFileResponse struct {
	Error                *errors.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MirrorFileResponse) Reset()         { *m = MirrorFileResponse{} }
func (m *MirrorFileResponse) String() string { return proto.CompactTextString(m) }
func (*MirrorFileResponse) ProtoMessage()    {}
func (*MirrorFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{6}
}

func (m *MirrorFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirrorFileResponse.Unmarshal(m, b)
}
func (m *MirrorFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirrorFileResponse.Marshal(b, m, deterministic)
}
func (m *MirrorFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirrorFileResponse.Merge(m, src)
}
func (m *MirrorFileResponse) XXX_Size() int {
	return xxx_messageInfo_MirrorFileResponse.Size(m)
}
func (m *MirrorFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MirrorFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MirrorFileResponse proto.InternalMessageInfo

func (m *MirrorFileResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RemoveFileRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFileRequest) Reset()         { *m = RemoveFileRequest{} }
func (m *RemoveFileRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveFileRequest) ProtoMessage()    {}
func (*RemoveFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{7}
}

func (m *RemoveFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFileRequest.Unmarshal(m, b)
}
func (m *RemoveFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFileRequest.Marshal(b, m, deterministic)
}
func (m *RemoveFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFileRequest.Merge(m, src)
}
func (m *RemoveFileRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveFileRequest.Size(m)
}
func (m *RemoveFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFileRequest proto.InternalMessageInfo

func (m *RemoveFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type RemoveFileResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFileResponse) Reset()         { *m = RemoveFileResponse{} }
func (m *RemoveFileResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveFileResponse) ProtoMessage()    {}
func (*RemoveFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{8}
}

func (m *RemoveFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFileResponse.Unmarshal(m, b)
}
func (m *RemoveFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFileResponse.Marshal(b, m, deterministic)
}
func (m *RemoveFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFileResponse.Merge(m, src)
}
func (m *RemoveFileResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveFileResponse.Size(m)
}
func (m *RemoveFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFileResponse proto.InternalMessageInfo

type SyncCompleteRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncCompleteRequest) Reset()         { *m = SyncCompleteRequest{} }
func (m *SyncCompleteRequest) String() string { return proto.CompactTextString(m) }
func (*SyncCompleteRequest) ProtoMessage()    {}
func (*SyncCompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{9}
}

func (m *SyncCompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncCompleteRequest.Unmarshal(m, b)
}
func (m *SyncCompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncCompleteRequest.Marshal(b, m, deterministic)
}
func (m *SyncCompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncCompleteRequest.Merge(m, src)
}
func (m *SyncCompleteRequest) XXX_Size() int {
	return xxx_messageInfo_SyncCompleteRequest.Size(m)
}
func (m *SyncCompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncCompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncCompleteRequest proto.InternalMessageInfo

type SyncCompleteResponse struct {
	Error                *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SyncCompleteResponse) Reset()         { *m = SyncCompleteResponse{} }
func (m *SyncCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*SyncCompleteResponse) ProtoMessage()    {}
func (*SyncCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{10}
}

func (m *SyncCompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncCompleteResponse.Unmarshal(m, b)
}
func (m *SyncCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncCompleteResponse.Marshal(b, m, deterministic)
}
func (m *SyncCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncCompleteResponse.Merge(m, src)
}
func (m *SyncCompleteResponse) XXX_Size() int {
	return xxx_messageInfo_SyncCompleteResponse.Size(m)
}
func (m *SyncCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncCompleteResponse proto.InternalMessageInfo

func (m *SyncCompleteResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Version struct {
	Version              string      `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	SyncConfig           *SyncConfig `protobuf:"bytes,2,opt,name=sync_config,json=syncConfig,proto3" json:"sync_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{11}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetSyncConfig() *SyncConfig {
	if m != nil {
		return m.SyncConfig
	}
	return nil
}

type SyncConfig struct {
	Rules []*SyncRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	// The main child command that gets run after every sync.
	// This is a long-running process, such as `node src/index.js`.
	OnSyncCommand []string `protobuf:"bytes,2,rep,name=on_sync_command,json=onSyncCommand,proto3" json:"on_sync_command,omitempty"`
	// An optional command that can be run before running the on_sync_command.
	// This is a process that completes, and doesn't have to run before every
	// restart of the on_sync_command.
	// For Node, this is usually `npm install`.
	OnInitCommand        []string `protobuf:"bytes,3,rep,name=on_init_command,json=onInitCommand,proto3" json:"on_init_command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncConfig) Reset()         { *m = SyncConfig{} }
func (m *SyncConfig) String() string { return proto.CompactTextString(m) }
func (*SyncConfig) ProtoMessage()    {}
func (*SyncConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{12}
}

func (m *SyncConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncConfig.Unmarshal(m, b)
}
func (m *SyncConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncConfig.Marshal(b, m, deterministic)
}
func (m *SyncConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncConfig.Merge(m, src)
}
func (m *SyncConfig) XXX_Size() int {
	return xxx_messageInfo_SyncConfig.Size(m)
}
func (m *SyncConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SyncConfig proto.InternalMessageInfo

func (m *SyncConfig) GetRules() []*SyncRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *SyncConfig) GetOnSyncCommand() []string {
	if m != nil {
		return m.OnSyncCommand
	}
	return nil
}

func (m *SyncConfig) GetOnInitCommand() []string {
	if m != nil {
		return m.OnInitCommand
	}
	return nil
}

// SyncRule represents how a file should be synced from the local machine into the
// container. Files at `From` are copied to `To` except for files matching
// `Except`, which are ignored in both the source and destination.
type SyncRule struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Except               []string `protobuf:"bytes,3,rep,name=except,proto3" json:"except,omitempty"`
	TriggerInit          bool     `protobuf:"varint,4,opt,name=trigger_init,json=triggerInit,proto3" json:"trigger_init,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncRule) Reset()         { *m = SyncRule{} }
func (m *SyncRule) String() string { return proto.CompactTextString(m) }
func (*SyncRule) ProtoMessage()    {}
func (*SyncRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{13}
}

func (m *SyncRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRule.Unmarshal(m, b)
}
func (m *SyncRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRule.Marshal(b, m, deterministic)
}
func (m *SyncRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRule.Merge(m, src)
}
func (m *SyncRule) XXX_Size() int {
	return xxx_messageInfo_SyncRule.Size(m)
}
func (m *SyncRule) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRule.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRule proto.InternalMessageInfo

func (m *SyncRule) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *SyncRule) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SyncRule) GetExcept() []string {
	if m != nil {
		return m.Except
	}
	return nil
}

func (m *SyncRule) GetTriggerInit() bool {
	if m != nil {
		return m.TriggerInit
	}
	return false
}

// MirrorFile represents a local file that has been mirrored into the container.
type MirrorFile struct {
	SyncSourcePath       string          `protobuf:"bytes,1,opt,name=syncSourcePath,proto3" json:"syncSourcePath,omitempty"`
	FileAttributes       *FileAttributes `protobuf:"bytes,2,opt,name=fileAttributes,proto3" json:"fileAttributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MirrorFile) Reset()         { *m = MirrorFile{} }
func (m *MirrorFile) String() string { return proto.CompactTextString(m) }
func (*MirrorFile) ProtoMessage()    {}
func (*MirrorFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{14}
}

func (m *MirrorFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirrorFile.Unmarshal(m, b)
}
func (m *MirrorFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirrorFile.Marshal(b, m, deterministic)
}
func (m *MirrorFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirrorFile.Merge(m, src)
}
func (m *MirrorFile) XXX_Size() int {
	return xxx_messageInfo_MirrorFile.Size(m)
}
func (m *MirrorFile) XXX_DiscardUnknown() {
	xxx_messageInfo_MirrorFile.DiscardUnknown(m)
}

var xxx_messageInfo_MirrorFile proto.InternalMessageInfo

func (m *MirrorFile) GetSyncSourcePath() string {
	if m != nil {
		return m.SyncSourcePath
	}
	return ""
}

func (m *MirrorFile) GetFileAttributes() *FileAttributes {
	if m != nil {
		return m.FileAttributes
	}
	return nil
}

type FileAttributes struct {
	ContentsHash         string               `protobuf:"bytes,1,opt,name=contentsHash,proto3" json:"contentsHash,omitempty"`
	Mode                 uint32               `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	ModTime              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=modTime,proto3" json:"modTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FileAttributes) Reset()         { *m = FileAttributes{} }
func (m *FileAttributes) String() string { return proto.CompactTextString(m) }
func (*FileAttributes) ProtoMessage()    {}
func (*FileAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce51bfc7cbf77e4b, []int{15}
}

func (m *FileAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileAttributes.Unmarshal(m, b)
}
func (m *FileAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileAttributes.Marshal(b, m, deterministic)
}
func (m *FileAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileAttributes.Merge(m, src)
}
func (m *FileAttributes) XXX_Size() int {
	return xxx_messageInfo_FileAttributes.Size(m)
}
func (m *FileAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_FileAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_FileAttributes proto.InternalMessageInfo

func (m *FileAttributes) GetContentsHash() string {
	if m != nil {
		return m.ContentsHash
	}
	return ""
}

func (m *FileAttributes) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *FileAttributes) GetModTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModTime
	}
	return nil
}

func init() {
	proto.RegisterType((*SetTargetVersionRequest)(nil), "kelda.dev.v0.SetTargetVersionRequest")
	proto.RegisterType((*SetTargetVersionResponse)(nil), "kelda.dev.v0.SetTargetVersionResponse")
	proto.RegisterType((*GetMirrorSnapshotRequest)(nil), "kelda.dev.v0.GetMirrorSnapshotRequest")
	proto.RegisterType((*GetMirrorSnapshotResponse)(nil), "kelda.dev.v0.GetMirrorSnapshotResponse")
	proto.RegisterType((*MirrorSnapshot)(nil), "kelda.dev.v0.MirrorSnapshot")
	proto.RegisterMapType((map[string]*MirrorFile)(nil), "kelda.dev.v0.MirrorSnapshot.FilesEntry")
	proto.RegisterType((*MirrorFileRequest)(nil), "kelda.dev.v0.MirrorFileRequest")
	proto.RegisterType((*MirrorFileResponse)(nil), "kelda.dev.v0.MirrorFileResponse")
	proto.RegisterType((*RemoveFileRequest)(nil), "kelda.dev.v0.RemoveFileRequest")
	proto.RegisterType((*RemoveFileResponse)(nil), "kelda.dev.v0.RemoveFileResponse")
	proto.RegisterType((*SyncCompleteRequest)(nil), "kelda.dev.v0.SyncCompleteRequest")
	proto.RegisterType((*SyncCompleteResponse)(nil), "kelda.dev.v0.SyncCompleteResponse")
	proto.RegisterType((*Version)(nil), "kelda.dev.v0.Version")
	proto.RegisterType((*SyncConfig)(nil), "kelda.dev.v0.SyncConfig")
	proto.RegisterType((*SyncRule)(nil), "kelda.dev.v0.SyncRule")
	proto.RegisterType((*MirrorFile)(nil), "kelda.dev.v0.MirrorFile")
	proto.RegisterType((*FileAttributes)(nil), "kelda.dev.v0.FileAttributes")
}

func init() { proto.RegisterFile("kelda/dev/v0/dev.proto", fileDescriptor_ce51bfc7cbf77e4b) }

var fileDescriptor_ce51bfc7cbf77e4b = []byte{
	// 783 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x51, 0x4f, 0xe3, 0x46,
	0x10, 0xc6, 0x09, 0x09, 0x64, 0x12, 0x52, 0xd8, 0x42, 0xea, 0x5a, 0x48, 0x04, 0x4b, 0x85, 0xa8,
	0x6a, 0x9d, 0x88, 0xf6, 0x81, 0x56, 0xea, 0x43, 0x29, 0x50, 0x5a, 0x09, 0xb5, 0xda, 0xa0, 0x56,
	0x6a, 0xa5, 0x22, 0xc7, 0xd9, 0x38, 0x56, 0xe2, 0x5d, 0xd7, 0x5e, 0x5b, 0x97, 0x7b, 0xb8, 0x97,
	0x7b, 0xbb, 0xbf, 0x71, 0x3f, 0xe7, 0xfe, 0xd4, 0x69, 0xbd, 0xeb, 0x24, 0x76, 0x12, 0x40, 0xf7,
	0xe4, 0xd9, 0x99, 0x6f, 0xbf, 0x6f, 0x76, 0x67, 0x67, 0x0c, 0xad, 0x09, 0x99, 0x0e, 0xed, 0xee,
	0x90, 0x24, 0xdd, 0xa4, 0x27, 0x3e, 0x56, 0x10, 0x32, 0xce, 0x50, 0x23, 0xf5, 0x5b, 0xc2, 0x91,
	0xf4, 0x8c, 0x13, 0x97, 0x31, 0x77, 0x4a, 0xba, 0x69, 0x6c, 0x10, 0x8f, 0xba, 0xdc, 0xf3, 0x49,
	0xc4, 0x6d, 0x3f, 0x90, 0x70, 0xe3, 0x58, 0xd2, 0x90, 0x30, 0x64, 0x61, 0x24, 0x98, 0xa4, 0x25,
	0xa3, 0xe6, 0xef, 0xf0, 0x45, 0x9f, 0xf0, 0x07, 0x3b, 0x74, 0x09, 0xff, 0x8b, 0x84, 0x91, 0xc7,
	0x28, 0x26, 0xff, 0xc7, 0x24, 0xe2, 0xa8, 0x0b, 0x3b, 0x89, 0xf4, 0xe8, 0x5a, 0x5b, 0xeb, 0xd4,
	0x2f, 0x8e, 0xac, 0x65, 0x65, 0x2b, 0x83, 0x67, 0x28, 0xf3, 0x0e, 0xf4, 0x55, 0xae, 0x28, 0x60,
	0x34, 0x22, 0xe8, 0x1b, 0xa8, 0xa4, 0xba, 0x8a, 0xaa, 0xa5, 0xa8, 0x54, 0x2e, 0x49, 0xcf, 0xba,
	0x11, 0x16, 0x96, 0x20, 0xd3, 0x00, 0xfd, 0x57, 0xc2, 0xef, 0x3d, 0xb1, 0xe8, 0x53, 0x3b, 0x88,
	0xc6, 0x8c, 0xab, 0xb4, 0xcc, 0xb7, 0x1a, 0x7c, 0xb9, 0x26, 0xa8, 0x74, 0x2e, 0x61, 0x37, 0x52,
	0x3e, 0x25, 0x75, 0x9c, 0xcf, 0xba, 0xb0, 0x6f, 0x8e, 0x5e, 0x64, 0x58, 0x7a, 0x49, 0x86, 0xef,
	0x35, 0x68, 0xe6, 0xa9, 0xd0, 0x4f, 0x50, 0x19, 0x79, 0x53, 0x12, 0xe9, 0x5a, 0xbb, 0xdc, 0xa9,
	0x5f, 0x9c, 0x3f, 0xa5, 0x6b, 0xdd, 0x0a, 0xe4, 0x0d, 0xe5, 0xe1, 0x0c, 0xcb, 0x5d, 0x06, 0x06,
	0x58, 0x38, 0xd1, 0x3e, 0x94, 0x27, 0x64, 0x96, 0x1e, 0xa1, 0x86, 0x85, 0x89, 0x2c, 0xa8, 0x24,
	0xf6, 0x34, 0x26, 0x2a, 0x3f, 0x7d, 0x1d, 0xbd, 0x20, 0xc0, 0x12, 0xf6, 0x63, 0xe9, 0x52, 0x33,
	0xff, 0x85, 0x83, 0xa5, 0x80, 0xaa, 0x6b, 0x0f, 0xaa, 0x63, 0x62, 0x0f, 0x49, 0x56, 0x8b, 0xcd,
	0x4c, 0x0a, 0x87, 0x0e, 0xa1, 0xe2, 0x8c, 0x63, 0x3a, 0x49, 0xa5, 0x1b, 0x58, 0x2e, 0xcc, 0x2b,
	0x40, 0xcb, 0xe4, 0xc5, 0x42, 0xbf, 0xe8, 0x1a, 0xcf, 0xe1, 0x00, 0x13, 0x9f, 0x25, 0x64, 0x39,
	0x41, 0x04, 0xdb, 0x81, 0xcd, 0xc7, 0xea, 0xf0, 0xa9, 0x6d, 0x1e, 0x02, 0x5a, 0x06, 0x4a, 0x31,
	0xf3, 0x08, 0x3e, 0xef, 0xcf, 0xa8, 0xf3, 0x0b, 0xf3, 0x83, 0x29, 0xe1, 0x19, 0x81, 0x79, 0x0d,
	0x87, 0x79, 0xf7, 0x27, 0x3d, 0xc2, 0xff, 0x60, 0x47, 0xbd, 0x62, 0xa4, 0xe7, 0x5b, 0xa1, 0x36,
	0x7f, 0xf3, 0xe8, 0x07, 0xa8, 0x47, 0x33, 0xea, 0x3c, 0x3a, 0x8c, 0x8e, 0x3c, 0x77, 0x7d, 0x6d,
	0x64, 0x2e, 0x22, 0x8e, 0x21, 0x9a, 0xdb, 0xe6, 0x3b, 0x0d, 0x60, 0x11, 0x12, 0xc9, 0x85, 0xf1,
	0xe2, 0xf9, 0xb4, 0x56, 0x39, 0x70, 0x2c, 0xaa, 0x9b, 0x82, 0xd0, 0x19, 0x7c, 0xc6, 0xe8, 0xa3,
	0x92, 0xf6, 0x7d, 0x9b, 0x0e, 0xf5, 0x52, 0xbb, 0xdc, 0xa9, 0xe1, 0x3d, 0x46, 0xd5, 0xd9, 0x85,
	0x53, 0xe1, 0x3c, 0xea, 0xf1, 0x39, 0xae, 0x9c, 0xe1, 0x7e, 0xa3, 0x1e, 0x57, 0x38, 0xd3, 0x83,
	0xdd, 0x4c, 0x42, 0xdc, 0xff, 0x28, 0x64, 0x7e, 0x76, 0xff, 0xc2, 0x46, 0x4d, 0x28, 0x71, 0x96,
	0x1e, 0xaf, 0x86, 0x4b, 0x9c, 0xa1, 0x16, 0x54, 0xc9, 0x2b, 0x87, 0x04, 0x5c, 0xd1, 0xa9, 0x15,
	0x3a, 0x85, 0x06, 0x0f, 0x3d, 0xd7, 0x25, 0x61, 0x2a, 0xaa, 0x6f, 0xb7, 0xb5, 0xce, 0x2e, 0xae,
	0x2b, 0x9f, 0x50, 0x34, 0x5f, 0x03, 0x2c, 0xde, 0x0d, 0x3a, 0x83, 0xa6, 0x38, 0x45, 0x9f, 0xc5,
	0xa1, 0x43, 0xfe, 0x5c, 0x94, 0xbd, 0xe0, 0x45, 0xd7, 0xd0, 0x14, 0x7d, 0xf2, 0x33, 0xe7, 0xa1,
	0x37, 0x88, 0x39, 0x89, 0xd4, 0x5d, 0x17, 0xda, 0xfb, 0x36, 0x87, 0xc1, 0x85, 0x3d, 0xe6, 0x1b,
	0x68, 0xe6, 0x11, 0xc8, 0x84, 0x86, 0xc3, 0x28, 0x27, 0x94, 0x47, 0x77, 0x76, 0x94, 0xa9, 0xe7,
	0x7c, 0xe2, 0x42, 0x7c, 0x36, 0x94, 0x9d, 0xb7, 0x87, 0x53, 0x1b, 0x7d, 0x0f, 0x3b, 0x3e, 0x1b,
	0x3e, 0x78, 0x3e, 0xd1, 0xcb, 0x69, 0x22, 0x86, 0x25, 0x27, 0xb1, 0x95, 0x4d, 0x62, 0xeb, 0x21,
	0x9b, 0xc4, 0x38, 0x83, 0x5e, 0x7c, 0x28, 0x43, 0xf9, 0x9a, 0x24, 0xc8, 0x81, 0xfd, 0xe2, 0xa8,
	0x44, 0x5f, 0x15, 0x2a, 0xbe, 0x7e, 0x2c, 0x1b, 0x67, 0xcf, 0xc1, 0x54, 0x6f, 0x6c, 0xa1, 0x11,
	0x1c, 0xac, 0x0c, 0x4a, 0x54, 0xd8, 0xbe, 0x69, 0xcc, 0x1a, 0xe7, 0xcf, 0xe2, 0xe6, 0x3a, 0x7f,
	0x40, 0x55, 0xc6, 0xd0, 0xc9, 0xc6, 0x51, 0xa2, 0x58, 0xdb, 0x9b, 0x01, 0x19, 0x5d, 0x47, 0x43,
	0xf7, 0x50, 0x95, 0xcd, 0x5e, 0x24, 0x5c, 0x99, 0x15, 0x45, 0xc2, 0x35, 0x33, 0x62, 0x0b, 0xfd,
	0x0d, 0x8d, 0xe5, 0x71, 0x80, 0x4e, 0xd7, 0xb5, 0x67, 0x6e, 0x82, 0x18, 0xe6, 0x53, 0x90, 0x8c,
	0xf8, 0xea, 0xeb, 0x7f, 0x3a, 0xae, 0xc7, 0xc7, 0xf1, 0xc0, 0x72, 0x98, 0xdf, 0x4d, 0x77, 0x7c,
	0xeb, 0x51, 0x47, 0x5a, 0xdd, 0x60, 0xe2, 0xca, 0xbf, 0xb2, 0xf8, 0x77, 0x0f, 0xaa, 0xa9, 0xf9,
	0xdd, 0xc7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0x5a, 0x5c, 0x1b, 0xd6, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DevClient is the client API for Dev service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DevClient interface {
	// SetTargetVersion sets the service's expected code version.
	SetTargetVersion(ctx context.Context, in *SetTargetVersionRequest, opts ...grpc.CallOption) (*SetTargetVersionResponse, error)
	// GetMirrorSnapshot returns the files that are currently mirrored in the
	// container.
	GetMirrorSnapshot(ctx context.Context, in *GetMirrorSnapshotRequest, opts ...grpc.CallOption) (*GetMirrorSnapshotResponse, error)
	// Mirror creates or updates the file mirror for the given file. The file
	// contents are streamed in chunks.
	Mirror(ctx context.Context, opts ...grpc.CallOption) (Dev_MirrorClient, error)
	// Remove removes a file mirror (e.g. if a file is deleted from the local
	// machine).
	Remove(ctx context.Context, in *RemoveFileRequest, opts ...grpc.CallOption) (*RemoveFileResponse, error)
	// SyncComplete notifies the dev server that the local machine has finished
	// updating the mirror files, and that the server can start the second stage
	// of the sync process.
	SyncComplete(ctx context.Context, in *SyncCompleteRequest, opts ...grpc.CallOption) (*SyncCompleteResponse, error)
}

type devClient struct {
	cc *grpc.ClientConn
}

func NewDevClient(cc *grpc.ClientConn) DevClient {
	return &devClient{cc}
}

func (c *devClient) SetTargetVersion(ctx context.Context, in *SetTargetVersionRequest, opts ...grpc.CallOption) (*SetTargetVersionResponse, error) {
	out := new(SetTargetVersionResponse)
	err := c.cc.Invoke(ctx, "/kelda.dev.v0.Dev/SetTargetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devClient) GetMirrorSnapshot(ctx context.Context, in *GetMirrorSnapshotRequest, opts ...grpc.CallOption) (*GetMirrorSnapshotResponse, error) {
	out := new(GetMirrorSnapshotResponse)
	err := c.cc.Invoke(ctx, "/kelda.dev.v0.Dev/GetMirrorSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devClient) Mirror(ctx context.Context, opts ...grpc.CallOption) (Dev_MirrorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dev_serviceDesc.Streams[0], "/kelda.dev.v0.Dev/Mirror", opts...)
	if err != nil {
		return nil, err
	}
	x := &devMirrorClient{stream}
	return x, nil
}

type Dev_MirrorClient interface {
	Send(*MirrorFileRequest) error
	CloseAndRecv() (*MirrorFileResponse, error)
	grpc.ClientStream
}

type devMirrorClient struct {
	grpc.ClientStream
}

func (x *devMirrorClient) Send(m *MirrorFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *devMirrorClient) CloseAndRecv() (*MirrorFileResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(MirrorFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *devClient) Remove(ctx context.Context, in *RemoveFileRequest, opts ...grpc.CallOption) (*RemoveFileResponse, error) {
	out := new(RemoveFileResponse)
	err := c.cc.Invoke(ctx, "/kelda.dev.v0.Dev/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devClient) SyncComplete(ctx context.Context, in *SyncCompleteRequest, opts ...grpc.CallOption) (*SyncCompleteResponse, error) {
	out := new(SyncCompleteResponse)
	err := c.cc.Invoke(ctx, "/kelda.dev.v0.Dev/SyncComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DevServer is the server API for Dev service.
type DevServer interface {
	// SetTargetVersion sets the service's expected code version.
	SetTargetVersion(context.Context, *SetTargetVersionRequest) (*SetTargetVersionResponse, error)
	// GetMirrorSnapshot returns the files that are currently mirrored in the
	// container.
	GetMirrorSnapshot(context.Context, *GetMirrorSnapshotRequest) (*GetMirrorSnapshotResponse, error)
	// Mirror creates or updates the file mirror for the given file. The file
	// contents are streamed in chunks.
	Mirror(Dev_MirrorServer) error
	// Remove removes a file mirror (e.g. if a file is deleted from the local
	// machine).
	Remove(context.Context, *RemoveFileRequest) (*RemoveFileResponse, error)
	// SyncComplete notifies the dev server that the local machine has finished
	// updating the mirror files, and that the server can start the second stage
	// of the sync process.
	SyncComplete(context.Context, *SyncCompleteRequest) (*SyncCompleteResponse, error)
}

func RegisterDevServer(s *grpc.Server, srv DevServer) {
	s.RegisterService(&_Dev_serviceDesc, srv)
}

func _Dev_SetTargetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTargetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServer).SetTargetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.dev.v0.Dev/SetTargetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServer).SetTargetVersion(ctx, req.(*SetTargetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dev_GetMirrorSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMirrorSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServer).GetMirrorSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.dev.v0.Dev/GetMirrorSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServer).GetMirrorSnapshot(ctx, req.(*GetMirrorSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dev_Mirror_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DevServer).Mirror(&devMirrorServer{stream})
}

type Dev_MirrorServer interface {
	SendAndClose(*MirrorFileResponse) error
	Recv() (*MirrorFileRequest, error)
	grpc.ServerStream
}

type devMirrorServer struct {
	grpc.ServerStream
}

func (x *devMirrorServer) SendAndClose(m *MirrorFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *devMirrorServer) Recv() (*MirrorFileRequest, error) {
	m := new(MirrorFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Dev_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.dev.v0.Dev/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServer).Remove(ctx, req.(*RemoveFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dev_SyncComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncCompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServer).SyncComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.dev.v0.Dev/SyncComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServer).SyncComplete(ctx, req.(*SyncCompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dev_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kelda.dev.v0.Dev",
	HandlerType: (*DevServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetTargetVersion",
			Handler:    _Dev_SetTargetVersion_Handler,
		},
		{
			MethodName: "GetMirrorSnapshot",
			Handler:    _Dev_GetMirrorSnapshot_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Dev_Remove_Handler,
		},
		{
			MethodName: "SyncComplete",
			Handler:    _Dev_SyncComplete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Mirror",
			Handler:       _Dev_Mirror_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "kelda/dev/v0/dev.proto",
}
