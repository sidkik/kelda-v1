// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kelda/minion/v0/minion.proto

package minion

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	errors "github.com/sidkik/kelda-v1/pkg/proto/errors"
	messages "github.com/sidkik/kelda-v1/pkg/proto/messages"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LicenseTerms_LicenseType int32

const (
	LicenseTerms_CUSTOMER LicenseTerms_LicenseType = 0
	LicenseTerms_TRIAL    LicenseTerms_LicenseType = 1
)

var LicenseTerms_LicenseType_name = map[int32]string{
	0: "CUSTOMER",
	1: "TRIAL",
}

var LicenseTerms_LicenseType_value = map[string]int32{
	"CUSTOMER": 0,
	"TRIAL":    1,
}

func (x LicenseTerms_LicenseType) String() string {
	return proto.EnumName(LicenseTerms_LicenseType_name, int32(x))
}

func (LicenseTerms_LicenseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{20, 0}
}

type CreateWorkspaceRequest struct {
	Workspace            *Workspace `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateWorkspaceRequest) Reset()         { *m = CreateWorkspaceRequest{} }
func (m *CreateWorkspaceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkspaceRequest) ProtoMessage()    {}
func (*CreateWorkspaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{0}
}

func (m *CreateWorkspaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkspaceRequest.Unmarshal(m, b)
}
func (m *CreateWorkspaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkspaceRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkspaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkspaceRequest.Merge(m, src)
}
func (m *CreateWorkspaceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkspaceRequest.Size(m)
}
func (m *CreateWorkspaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkspaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkspaceRequest proto.InternalMessageInfo

func (m *CreateWorkspaceRequest) GetWorkspace() *Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

type CreateWorkspaceResponse struct {
	Error                *errors.Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Messages             []*messages.Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateWorkspaceResponse) Reset()         { *m = CreateWorkspaceResponse{} }
func (m *CreateWorkspaceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWorkspaceResponse) ProtoMessage()    {}
func (*CreateWorkspaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{1}
}

func (m *CreateWorkspaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkspaceResponse.Unmarshal(m, b)
}
func (m *CreateWorkspaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkspaceResponse.Marshal(b, m, deterministic)
}
func (m *CreateWorkspaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkspaceResponse.Merge(m, src)
}
func (m *CreateWorkspaceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWorkspaceResponse.Size(m)
}
func (m *CreateWorkspaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkspaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkspaceResponse proto.InternalMessageInfo

func (m *CreateWorkspaceResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CreateWorkspaceResponse) GetMessages() []*messages.Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type LogEventRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEventRequest) Reset()         { *m = LogEventRequest{} }
func (m *LogEventRequest) String() string { return proto.CompactTextString(m) }
func (*LogEventRequest) ProtoMessage()    {}
func (*LogEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{2}
}

func (m *LogEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEventRequest.Unmarshal(m, b)
}
func (m *LogEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEventRequest.Marshal(b, m, deterministic)
}
func (m *LogEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEventRequest.Merge(m, src)
}
func (m *LogEventRequest) XXX_Size() int {
	return xxx_messageInfo_LogEventRequest.Size(m)
}
func (m *LogEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogEventRequest proto.InternalMessageInfo

func (m *LogEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type LogEventResponse struct {
	Error                *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LogEventResponse) Reset()         { *m = LogEventResponse{} }
func (m *LogEventResponse) String() string { return proto.CompactTextString(m) }
func (*LogEventResponse) ProtoMessage()    {}
func (*LogEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{3}
}

func (m *LogEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEventResponse.Unmarshal(m, b)
}
func (m *LogEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEventResponse.Marshal(b, m, deterministic)
}
func (m *LogEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEventResponse.Merge(m, src)
}
func (m *LogEventResponse) XXX_Size() int {
	return xxx_messageInfo_LogEventResponse.Size(m)
}
func (m *LogEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogEventResponse proto.InternalMessageInfo

func (m *LogEventResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{4}
}

func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(m, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

type GetVersionResponse struct {
	KeldaVersion         *KeldaVersion `protobuf:"bytes,1,opt,name=kelda_version,json=keldaVersion,proto3" json:"kelda_version,omitempty"`
	Error                *errors.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{5}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetKeldaVersion() *KeldaVersion {
	if m != nil {
		return m.KeldaVersion
	}
	return nil
}

func (m *GetVersionResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// This is how image update works in Kelda:
//
// At the time the workspace is created (when the user types `kelda dev`), the
// minion server will retrieve all the digests of the images (not already
// present) referenced by the manifests and write them to a field in the
// MicroserviceSpec called ImageDigests. Afterwards, when the microservice is
// being deployed, the controller will inject the digests from ImageDigests to
// the actual PodSpecs, so the images being pulled by Kubernetes pods will be
// fixed to what are specified in ImageDigests.
//
// When the user types `kelda update`, the CLI will make an RPC call,
// GetUpdates, to the minion server. The minion server will again retrieve all
// the digests, compare them to the ones in ImageDigests, and return any
// difference to the user. If the user confirms the updates, the CLI will make
// another RPC call, PerformUpdates, to the minion server, passing the same
// structure returned by GetUpdates. The server will update the ImageDigests
// with the new digests, and will trigger a redeploy in the microservice
// controller.
type GetUpdatesRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUpdatesRequest) Reset()         { *m = GetUpdatesRequest{} }
func (m *GetUpdatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetUpdatesRequest) ProtoMessage()    {}
func (*GetUpdatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{6}
}

func (m *GetUpdatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdatesRequest.Unmarshal(m, b)
}
func (m *GetUpdatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdatesRequest.Marshal(b, m, deterministic)
}
func (m *GetUpdatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdatesRequest.Merge(m, src)
}
func (m *GetUpdatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetUpdatesRequest.Size(m)
}
func (m *GetUpdatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdatesRequest proto.InternalMessageInfo

func (m *GetUpdatesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type GetUpdatesResponse struct {
	ServiceUpdates       []*ServiceUpdate `protobuf:"bytes,1,rep,name=service_updates,json=serviceUpdates,proto3" json:"service_updates,omitempty"`
	Error                *errors.Error    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetUpdatesResponse) Reset()         { *m = GetUpdatesResponse{} }
func (m *GetUpdatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetUpdatesResponse) ProtoMessage()    {}
func (*GetUpdatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{7}
}

func (m *GetUpdatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdatesResponse.Unmarshal(m, b)
}
func (m *GetUpdatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdatesResponse.Marshal(b, m, deterministic)
}
func (m *GetUpdatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdatesResponse.Merge(m, src)
}
func (m *GetUpdatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetUpdatesResponse.Size(m)
}
func (m *GetUpdatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdatesResponse proto.InternalMessageInfo

func (m *GetUpdatesResponse) GetServiceUpdates() []*ServiceUpdate {
	if m != nil {
		return m.ServiceUpdates
	}
	return nil
}

func (m *GetUpdatesResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type PerformUpdatesRequest struct {
	Namespace            string           `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServiceUpdates       []*ServiceUpdate `protobuf:"bytes,2,rep,name=service_updates,json=serviceUpdates,proto3" json:"service_updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PerformUpdatesRequest) Reset()         { *m = PerformUpdatesRequest{} }
func (m *PerformUpdatesRequest) String() string { return proto.CompactTextString(m) }
func (*PerformUpdatesRequest) ProtoMessage()    {}
func (*PerformUpdatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{8}
}

func (m *PerformUpdatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformUpdatesRequest.Unmarshal(m, b)
}
func (m *PerformUpdatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformUpdatesRequest.Marshal(b, m, deterministic)
}
func (m *PerformUpdatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformUpdatesRequest.Merge(m, src)
}
func (m *PerformUpdatesRequest) XXX_Size() int {
	return xxx_messageInfo_PerformUpdatesRequest.Size(m)
}
func (m *PerformUpdatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformUpdatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PerformUpdatesRequest proto.InternalMessageInfo

func (m *PerformUpdatesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PerformUpdatesRequest) GetServiceUpdates() []*ServiceUpdate {
	if m != nil {
		return m.ServiceUpdates
	}
	return nil
}

type PerformUpdatesResponse struct {
	Error                *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PerformUpdatesResponse) Reset()         { *m = PerformUpdatesResponse{} }
func (m *PerformUpdatesResponse) String() string { return proto.CompactTextString(m) }
func (*PerformUpdatesResponse) ProtoMessage()    {}
func (*PerformUpdatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{9}
}

func (m *PerformUpdatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformUpdatesResponse.Unmarshal(m, b)
}
func (m *PerformUpdatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformUpdatesResponse.Marshal(b, m, deterministic)
}
func (m *PerformUpdatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformUpdatesResponse.Merge(m, src)
}
func (m *PerformUpdatesResponse) XXX_Size() int {
	return xxx_messageInfo_PerformUpdatesResponse.Size(m)
}
func (m *PerformUpdatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformUpdatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PerformUpdatesResponse proto.InternalMessageInfo

func (m *PerformUpdatesResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ServiceUpdate struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContainerUpdates     []*ContainerUpdate `protobuf:"bytes,2,rep,name=container_updates,json=containerUpdates,proto3" json:"container_updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ServiceUpdate) Reset()         { *m = ServiceUpdate{} }
func (m *ServiceUpdate) String() string { return proto.CompactTextString(m) }
func (*ServiceUpdate) ProtoMessage()    {}
func (*ServiceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{10}
}

func (m *ServiceUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceUpdate.Unmarshal(m, b)
}
func (m *ServiceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceUpdate.Marshal(b, m, deterministic)
}
func (m *ServiceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceUpdate.Merge(m, src)
}
func (m *ServiceUpdate) XXX_Size() int {
	return xxx_messageInfo_ServiceUpdate.Size(m)
}
func (m *ServiceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceUpdate proto.InternalMessageInfo

func (m *ServiceUpdate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceUpdate) GetContainerUpdates() []*ContainerUpdate {
	if m != nil {
		return m.ContainerUpdates
	}
	return nil
}

type ContainerUpdate struct {
	ControllerName       string   `protobuf:"bytes,1,opt,name=controller_name,json=controllerName,proto3" json:"controller_name,omitempty"`
	ContainerName        string   `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	OldDigest            string   `protobuf:"bytes,3,opt,name=old_digest,json=oldDigest,proto3" json:"old_digest,omitempty"`
	NewDigest            string   `protobuf:"bytes,4,opt,name=new_digest,json=newDigest,proto3" json:"new_digest,omitempty"`
	ImageUrl             string   `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerUpdate) Reset()         { *m = ContainerUpdate{} }
func (m *ContainerUpdate) String() string { return proto.CompactTextString(m) }
func (*ContainerUpdate) ProtoMessage()    {}
func (*ContainerUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{11}
}

func (m *ContainerUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerUpdate.Unmarshal(m, b)
}
func (m *ContainerUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerUpdate.Marshal(b, m, deterministic)
}
func (m *ContainerUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerUpdate.Merge(m, src)
}
func (m *ContainerUpdate) XXX_Size() int {
	return xxx_messageInfo_ContainerUpdate.Size(m)
}
func (m *ContainerUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerUpdate proto.InternalMessageInfo

func (m *ContainerUpdate) GetControllerName() string {
	if m != nil {
		return m.ControllerName
	}
	return ""
}

func (m *ContainerUpdate) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *ContainerUpdate) GetOldDigest() string {
	if m != nil {
		return m.OldDigest
	}
	return ""
}

func (m *ContainerUpdate) GetNewDigest() string {
	if m != nil {
		return m.NewDigest
	}
	return ""
}

func (m *ContainerUpdate) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

// Workspace contains the main development environment configuration.
type Workspace struct {
	Namespace            string     `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Services             []*Service `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Tunnels              []*Tunnel  `protobuf:"bytes,3,rep,name=tunnels,proto3" json:"tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Workspace) Reset()         { *m = Workspace{} }
func (m *Workspace) String() string { return proto.CompactTextString(m) }
func (*Workspace) ProtoMessage()    {}
func (*Workspace) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{12}
}

func (m *Workspace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workspace.Unmarshal(m, b)
}
func (m *Workspace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workspace.Marshal(b, m, deterministic)
}
func (m *Workspace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workspace.Merge(m, src)
}
func (m *Workspace) XXX_Size() int {
	return xxx_messageInfo_Workspace.Size(m)
}
func (m *Workspace) XXX_DiscardUnknown() {
	xxx_messageInfo_Workspace.DiscardUnknown(m)
}

var xxx_messageInfo_Workspace proto.InternalMessageInfo

func (m *Workspace) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Workspace) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Workspace) GetTunnels() []*Tunnel {
	if m != nil {
		return m.Tunnels
	}
	return nil
}

// Tunnel defines a desired tunnel between a local port and a service in the
// development environment.
type Tunnel struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	LocalPort            uint32   `protobuf:"varint,2,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemotePort           uint32   `protobuf:"varint,3,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tunnel) Reset()         { *m = Tunnel{} }
func (m *Tunnel) String() string { return proto.CompactTextString(m) }
func (*Tunnel) ProtoMessage()    {}
func (*Tunnel) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{13}
}

func (m *Tunnel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tunnel.Unmarshal(m, b)
}
func (m *Tunnel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tunnel.Marshal(b, m, deterministic)
}
func (m *Tunnel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tunnel.Merge(m, src)
}
func (m *Tunnel) XXX_Size() int {
	return xxx_messageInfo_Tunnel.Size(m)
}
func (m *Tunnel) XXX_DiscardUnknown() {
	xxx_messageInfo_Tunnel.DiscardUnknown(m)
}

var xxx_messageInfo_Tunnel proto.InternalMessageInfo

func (m *Tunnel) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Tunnel) GetLocalPort() uint32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *Tunnel) GetRemotePort() uint32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

// Service contains the configuration required to boot a Microservice.
type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Manifests            []string `protobuf:"bytes,2,rep,name=manifests,proto3" json:"manifests,omitempty"`
	DevMode              bool     `protobuf:"varint,3,opt,name=dev_mode,json=devMode,proto3" json:"dev_mode,omitempty"`
	DevImage             string   `protobuf:"bytes,4,opt,name=dev_image,json=devImage,proto3" json:"dev_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{14}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetManifests() []string {
	if m != nil {
		return m.Manifests
	}
	return nil
}

func (m *Service) GetDevMode() bool {
	if m != nil {
		return m.DevMode
	}
	return false
}

func (m *Service) GetDevImage() string {
	if m != nil {
		return m.DevImage
	}
	return ""
}

type Event struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Namespace            string               `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Event                string               `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	AdditionalJson       string               `protobuf:"bytes,4,opt,name=additional_json,json=additionalJson,proto3" json:"additional_json,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{15}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Event) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Event) GetAdditionalJson() string {
	if m != nil {
		return m.AdditionalJson
	}
	return ""
}

type KeldaVersion struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeldaVersion) Reset()         { *m = KeldaVersion{} }
func (m *KeldaVersion) String() string { return proto.CompactTextString(m) }
func (*KeldaVersion) ProtoMessage()    {}
func (*KeldaVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{16}
}

func (m *KeldaVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeldaVersion.Unmarshal(m, b)
}
func (m *KeldaVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeldaVersion.Marshal(b, m, deterministic)
}
func (m *KeldaVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeldaVersion.Merge(m, src)
}
func (m *KeldaVersion) XXX_Size() int {
	return xxx_messageInfo_KeldaVersion.Size(m)
}
func (m *KeldaVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_KeldaVersion.DiscardUnknown(m)
}

var xxx_messageInfo_KeldaVersion proto.InternalMessageInfo

func (m *KeldaVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type GetLicenseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLicenseRequest) Reset()         { *m = GetLicenseRequest{} }
func (m *GetLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*GetLicenseRequest) ProtoMessage()    {}
func (*GetLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{17}
}

func (m *GetLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLicenseRequest.Unmarshal(m, b)
}
func (m *GetLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLicenseRequest.Marshal(b, m, deterministic)
}
func (m *GetLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLicenseRequest.Merge(m, src)
}
func (m *GetLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_GetLicenseRequest.Size(m)
}
func (m *GetLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLicenseRequest proto.InternalMessageInfo

type GetLicenseResponse struct {
	Error                *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	License              *License      `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetLicenseResponse) Reset()         { *m = GetLicenseResponse{} }
func (m *GetLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*GetLicenseResponse) ProtoMessage()    {}
func (*GetLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{18}
}

func (m *GetLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLicenseResponse.Unmarshal(m, b)
}
func (m *GetLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLicenseResponse.Marshal(b, m, deterministic)
}
func (m *GetLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLicenseResponse.Merge(m, src)
}
func (m *GetLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_GetLicenseResponse.Size(m)
}
func (m *GetLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLicenseResponse proto.InternalMessageInfo

func (m *GetLicenseResponse) GetError() *errors.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetLicenseResponse) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

type License struct {
	Terms                *LicenseTerms `protobuf:"bytes,1,opt,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *License) Reset()         { *m = License{} }
func (m *License) String() string { return proto.CompactTextString(m) }
func (*License) ProtoMessage()    {}
func (*License) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{19}
}

func (m *License) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_License.Unmarshal(m, b)
}
func (m *License) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_License.Marshal(b, m, deterministic)
}
func (m *License) XXX_Merge(src proto.Message) {
	xxx_messageInfo_License.Merge(m, src)
}
func (m *License) XXX_Size() int {
	return xxx_messageInfo_License.Size(m)
}
func (m *License) XXX_DiscardUnknown() {
	xxx_messageInfo_License.DiscardUnknown(m)
}

var xxx_messageInfo_License proto.InternalMessageInfo

func (m *License) GetTerms() *LicenseTerms {
	if m != nil {
		return m.Terms
	}
	return nil
}

type LicenseTerms struct {
	Customer             string                   `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	Type                 LicenseTerms_LicenseType `protobuf:"varint,2,opt,name=type,proto3,enum=kelda.minion.v0.LicenseTerms_LicenseType" json:"type,omitempty"`
	Seats                int32                    `protobuf:"varint,3,opt,name=seats,proto3" json:"seats,omitempty"`
	ExpiryTime           *timestamp.Timestamp     `protobuf:"bytes,4,opt,name=expiryTime,proto3" json:"expiryTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *LicenseTerms) Reset()         { *m = LicenseTerms{} }
func (m *LicenseTerms) String() string { return proto.CompactTextString(m) }
func (*LicenseTerms) ProtoMessage()    {}
func (*LicenseTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f9a6633c3cdc5ef, []int{20}
}

func (m *LicenseTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicenseTerms.Unmarshal(m, b)
}
func (m *LicenseTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicenseTerms.Marshal(b, m, deterministic)
}
func (m *LicenseTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicenseTerms.Merge(m, src)
}
func (m *LicenseTerms) XXX_Size() int {
	return xxx_messageInfo_LicenseTerms.Size(m)
}
func (m *LicenseTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_LicenseTerms.DiscardUnknown(m)
}

var xxx_messageInfo_LicenseTerms proto.InternalMessageInfo

func (m *LicenseTerms) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *LicenseTerms) GetType() LicenseTerms_LicenseType {
	if m != nil {
		return m.Type
	}
	return LicenseTerms_CUSTOMER
}

func (m *LicenseTerms) GetSeats() int32 {
	if m != nil {
		return m.Seats
	}
	return 0
}

func (m *LicenseTerms) GetExpiryTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("kelda.minion.v0.LicenseTerms_LicenseType", LicenseTerms_LicenseType_name, LicenseTerms_LicenseType_value)
	proto.RegisterType((*CreateWorkspaceRequest)(nil), "kelda.minion.v0.CreateWorkspaceRequest")
	proto.RegisterType((*CreateWorkspaceResponse)(nil), "kelda.minion.v0.CreateWorkspaceResponse")
	proto.RegisterType((*LogEventRequest)(nil), "kelda.minion.v0.LogEventRequest")
	proto.RegisterType((*LogEventResponse)(nil), "kelda.minion.v0.LogEventResponse")
	proto.RegisterType((*GetVersionRequest)(nil), "kelda.minion.v0.GetVersionRequest")
	proto.RegisterType((*GetVersionResponse)(nil), "kelda.minion.v0.GetVersionResponse")
	proto.RegisterType((*GetUpdatesRequest)(nil), "kelda.minion.v0.GetUpdatesRequest")
	proto.RegisterType((*GetUpdatesResponse)(nil), "kelda.minion.v0.GetUpdatesResponse")
	proto.RegisterType((*PerformUpdatesRequest)(nil), "kelda.minion.v0.PerformUpdatesRequest")
	proto.RegisterType((*PerformUpdatesResponse)(nil), "kelda.minion.v0.PerformUpdatesResponse")
	proto.RegisterType((*ServiceUpdate)(nil), "kelda.minion.v0.ServiceUpdate")
	proto.RegisterType((*ContainerUpdate)(nil), "kelda.minion.v0.ContainerUpdate")
	proto.RegisterType((*Workspace)(nil), "kelda.minion.v0.Workspace")
	proto.RegisterType((*Tunnel)(nil), "kelda.minion.v0.Tunnel")
	proto.RegisterType((*Service)(nil), "kelda.minion.v0.Service")
	proto.RegisterType((*Event)(nil), "kelda.minion.v0.Event")
	proto.RegisterType((*KeldaVersion)(nil), "kelda.minion.v0.KeldaVersion")
	proto.RegisterType((*GetLicenseRequest)(nil), "kelda.minion.v0.GetLicenseRequest")
	proto.RegisterType((*GetLicenseResponse)(nil), "kelda.minion.v0.GetLicenseResponse")
	proto.RegisterType((*License)(nil), "kelda.minion.v0.License")
	proto.RegisterType((*LicenseTerms)(nil), "kelda.minion.v0.LicenseTerms")
}

func init() { proto.RegisterFile("kelda/minion/v0/minion.proto", fileDescriptor_5f9a6633c3cdc5ef) }

var fileDescriptor_5f9a6633c3cdc5ef = []byte{
	// 1038 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5f, 0x73, 0xdb, 0x44,
	0x10, 0x8f, 0x13, 0x3b, 0xb6, 0x37, 0x89, 0x9d, 0x1e, 0x90, 0x1a, 0x93, 0xd2, 0xf4, 0x18, 0x9a,
	0x30, 0x50, 0x3b, 0x4d, 0x19, 0x86, 0x61, 0x86, 0x7f, 0x0d, 0xa1, 0xd3, 0x92, 0x40, 0x51, 0x13,
	0x3a, 0xc3, 0x8b, 0x47, 0xb1, 0x36, 0x46, 0x58, 0xd2, 0x99, 0xbb, 0xb3, 0x42, 0x5e, 0xe0, 0x8d,
	0x17, 0xde, 0x18, 0x3e, 0x09, 0xcf, 0x7c, 0x1b, 0xbe, 0x08, 0xa3, 0xfb, 0x23, 0xc9, 0x92, 0x9b,
	0xb4, 0x79, 0xbb, 0xdd, 0xfd, 0xed, 0xee, 0xef, 0x6e, 0x77, 0x76, 0x0f, 0x36, 0xc7, 0x18, 0x78,
	0x6e, 0x3f, 0xf4, 0x23, 0x9f, 0x45, 0xfd, 0x78, 0xd7, 0x9c, 0x7a, 0x13, 0xce, 0x24, 0x23, 0x6d,
	0x65, 0xed, 0x19, 0x5d, 0xbc, 0xdb, 0xbd, 0x3d, 0x62, 0x6c, 0x14, 0x60, 0x5f, 0x99, 0x4f, 0xa7,
	0x67, 0x7d, 0xe9, 0x87, 0x28, 0xa4, 0x1b, 0x4e, 0xb4, 0x47, 0xd7, 0xc4, 0x43, 0xce, 0x19, 0x17,
	0x49, 0x3c, 0x7d, 0x32, 0xd6, 0x2d, 0x93, 0x0d, 0x85, 0x70, 0x47, 0xa8, 0xec, 0xf6, 0xac, 0x11,
	0xd4, 0x81, 0x8d, 0x7d, 0x8e, 0xae, 0xc4, 0xe7, 0x8c, 0x8f, 0xc5, 0xc4, 0x1d, 0xa2, 0x83, 0xbf,
	0x4c, 0x51, 0x48, 0xf2, 0x31, 0x34, 0xcf, 0xad, 0xae, 0x53, 0xd9, 0xaa, 0xec, 0xac, 0xec, 0x75,
	0x7b, 0x05, 0x7e, 0xbd, 0xcc, 0x2b, 0x03, 0xd3, 0xdf, 0xe1, 0x66, 0x29, 0xa6, 0x98, 0xb0, 0x48,
	0x20, 0xf9, 0x00, 0x6a, 0x8a, 0xa0, 0x09, 0xb8, 0x61, 0x02, 0x1a, 0xd2, 0xf1, 0x6e, 0xef, 0x20,
	0x39, 0x39, 0x1a, 0x44, 0x3e, 0x82, 0x86, 0xa5, 0xdb, 0x59, 0xdc, 0x5a, 0xca, 0x33, 0xb0, 0xb7,
	0x88, 0x77, 0x7b, 0x47, 0xfa, 0xec, 0xa4, 0x58, 0xfa, 0x39, 0xb4, 0x0f, 0xd9, 0xe8, 0x20, 0xc6,
	0x48, 0xda, 0xdb, 0x24, 0x89, 0x13, 0xb9, 0x90, 0x38, 0xbb, 0x89, 0x46, 0x6b, 0x10, 0xfd, 0x02,
	0xd6, 0xb3, 0x00, 0xd7, 0xa1, 0x4e, 0x5f, 0x83, 0x1b, 0x8f, 0x50, 0xfe, 0x80, 0x5c, 0xf8, 0x2c,
	0x32, 0x24, 0xe8, 0x1f, 0x15, 0x20, 0x79, 0xad, 0x89, 0xfc, 0x10, 0xd6, 0x54, 0xac, 0x41, 0xac,
	0x0d, 0x26, 0xc3, 0xad, 0x12, 0xc7, 0x6f, 0x12, 0xd9, 0x7a, 0xaf, 0x8e, 0x73, 0x52, 0xc6, 0x6e,
	0xf1, 0x65, 0xd8, 0xdd, 0x57, 0xec, 0x4e, 0x26, 0x9e, 0x2b, 0x51, 0xd8, 0x27, 0xda, 0x84, 0x66,
	0xe4, 0x86, 0x98, 0x15, 0xbc, 0xe9, 0x64, 0x0a, 0xfa, 0xa7, 0xe6, 0x9e, 0xfa, 0x18, 0xee, 0x8f,
	0xa0, 0x2d, 0x90, 0xc7, 0xfe, 0x10, 0x07, 0x53, 0x6d, 0xea, 0x54, 0x54, 0xa5, 0xde, 0x2e, 0xb1,
	0x7f, 0xa6, 0x71, 0x3a, 0x82, 0xd3, 0x12, 0x79, 0x51, 0xbc, 0xe2, 0x05, 0x7e, 0x83, 0x37, 0x9e,
	0x22, 0x3f, 0x63, 0x3c, 0x7c, 0x95, 0x4b, 0xcc, 0x63, 0xbb, 0x78, 0x1d, 0xb6, 0xf4, 0x6b, 0xd8,
	0x28, 0xe6, 0xbf, 0x56, 0x9b, 0x70, 0x58, 0x9b, 0x49, 0x44, 0x08, 0x54, 0x13, 0xba, 0x86, 0xba,
	0x3a, 0x93, 0x23, 0xb8, 0x31, 0x64, 0x91, 0x74, 0xfd, 0x08, 0x79, 0x81, 0xf7, 0x56, 0x89, 0xf7,
	0xbe, 0x45, 0x1a, 0xe6, 0xeb, 0xc3, 0x59, 0x85, 0xa0, 0xff, 0x56, 0xa0, 0x5d, 0x40, 0x91, 0x6d,
	0x68, 0x27, 0x38, 0xce, 0x82, 0x00, 0xf9, 0x20, 0xc7, 0xa0, 0x95, 0xa9, 0xbf, 0x4d, 0xb8, 0xbc,
	0x0b, 0xad, 0x8c, 0x8b, 0xc2, 0x2d, 0x2a, 0xdc, 0x5a, 0xaa, 0x55, 0xb0, 0x5b, 0x00, 0x2c, 0xf0,
	0x06, 0x9e, 0x3f, 0x42, 0x21, 0x3b, 0x4b, 0xba, 0x0e, 0x2c, 0xf0, 0xbe, 0x52, 0x8a, 0xc4, 0x1c,
	0xe1, 0xb9, 0x35, 0x57, 0x4d, 0x99, 0xf0, 0xdc, 0x98, 0xdf, 0x82, 0xa6, 0x1f, 0xba, 0x23, 0x1c,
	0x4c, 0x79, 0xd0, 0xa9, 0x29, 0x6b, 0x43, 0x29, 0x4e, 0x78, 0x40, 0xff, 0xaa, 0x40, 0x33, 0x1d,
	0x2c, 0x57, 0xd4, 0xfb, 0x43, 0x68, 0x98, 0xc2, 0xd9, 0x07, 0xeb, 0xbc, 0xa8, 0xd0, 0x4e, 0x8a,
	0x24, 0xf7, 0xa1, 0x2e, 0xa7, 0x51, 0x84, 0x81, 0xe8, 0x2c, 0x29, 0xa7, 0x9b, 0x25, 0xa7, 0x63,
	0x65, 0x77, 0x2c, 0x8e, 0x8e, 0x61, 0x59, 0xab, 0xc8, 0x1d, 0x58, 0xb5, 0x2d, 0x96, 0x7b, 0xc6,
	0x15, 0xa3, 0xb3, 0x8f, 0x13, 0xb0, 0xa1, 0x1b, 0x0c, 0x26, 0x8c, 0x4b, 0xf5, 0x7e, 0x6b, 0x4e,
	0x53, 0x69, 0x9e, 0x32, 0x2e, 0xc9, 0x6d, 0x58, 0xe1, 0x18, 0x32, 0x89, 0xda, 0xbe, 0xa4, 0xec,
	0xa0, 0x55, 0x09, 0x80, 0x5e, 0x40, 0xdd, 0x90, 0x9e, 0xdb, 0x2e, 0x9b, 0xd0, 0x0c, 0xdd, 0xc8,
	0x3f, 0x43, 0x21, 0xf5, 0xad, 0x9b, 0x4e, 0xa6, 0x20, 0x6f, 0x42, 0xc3, 0xc3, 0x78, 0x10, 0x32,
	0x0f, 0x55, 0xe8, 0x86, 0x53, 0xf7, 0x30, 0x3e, 0x62, 0x1e, 0x26, 0xcf, 0x9e, 0x98, 0xd4, 0x4b,
	0x9b, 0xa2, 0x24, 0xd8, 0xc7, 0x89, 0xfc, 0xa4, 0xda, 0xa8, 0xad, 0x2f, 0xd3, 0xbf, 0x2b, 0x50,
	0x53, 0x63, 0x91, 0xf4, 0xa0, 0x9a, 0xec, 0xa2, 0x74, 0x33, 0xe8, 0x45, 0xd5, 0xb3, 0x8b, 0xaa,
	0x77, 0x6c, 0x17, 0x95, 0xa3, 0x70, 0xb3, 0x85, 0x5a, 0x2c, 0x16, 0xea, 0x75, 0x3b, 0x9e, 0x75,
	0xab, 0x68, 0x21, 0xe9, 0x4a, 0xd7, 0xf3, 0x7c, 0xe9, 0xb3, 0xc8, 0x0d, 0x06, 0x3f, 0x0b, 0x16,
	0x19, 0x5a, 0xad, 0x4c, 0xfd, 0x44, 0xb0, 0x88, 0xee, 0xc0, 0x6a, 0x7e, 0x36, 0x92, 0x0e, 0xd4,
	0xf3, 0xb3, 0xb4, 0xe9, 0x58, 0xd1, 0xcc, 0xe5, 0x43, 0x7f, 0x88, 0x91, 0xb0, 0xab, 0x8e, 0xc6,
	0x6a, 0xb4, 0xa5, 0xca, 0x6b, 0xed, 0xaa, 0x3d, 0xa8, 0x07, 0x3a, 0x80, 0x99, 0x60, 0xe5, 0x4e,
	0xb3, 0x09, 0x2c, 0x90, 0x7e, 0x06, 0x75, 0xa3, 0x23, 0x0f, 0xa0, 0x26, 0x91, 0x87, 0xe2, 0x85,
	0xb3, 0xdf, 0x00, 0x8f, 0x13, 0x90, 0xa3, 0xb1, 0xf4, 0xbf, 0x0a, 0xac, 0xe6, 0xf5, 0xa4, 0x0b,
	0x8d, 0xe1, 0x54, 0x48, 0x16, 0x22, 0x37, 0x17, 0x4f, 0x65, 0xf2, 0x29, 0x54, 0xe5, 0xc5, 0x44,
	0xb3, 0x6b, 0xed, 0xbd, 0x77, 0x69, 0x82, 0x54, 0xb8, 0x98, 0xa0, 0xa3, 0xdc, 0x92, 0x0a, 0x09,
	0x74, 0xa5, 0x50, 0x15, 0xaa, 0x39, 0x5a, 0x20, 0x9f, 0x00, 0xe0, 0xaf, 0x13, 0x9f, 0x5f, 0x24,
	0xe5, 0x56, 0xc5, 0xb9, 0xbc, 0x17, 0x72, 0x68, 0x7a, 0x17, 0x56, 0x72, 0x69, 0xc8, 0x2a, 0x34,
	0xf6, 0x4f, 0x9e, 0x1d, 0x7f, 0x77, 0x74, 0xe0, 0xac, 0x2f, 0x90, 0x26, 0xd4, 0x8e, 0x9d, 0xc7,
	0x5f, 0x1e, 0xae, 0x57, 0xf6, 0xfe, 0xa9, 0x42, 0x4d, 0x55, 0x97, 0x9c, 0x41, 0xbb, 0xf0, 0xb1,
	0x20, 0xdb, 0xe5, 0x01, 0x38, 0xf7, 0x3b, 0xd3, 0xdd, 0xb9, 0x1a, 0xa8, 0xeb, 0x4e, 0x17, 0xc8,
	0xf7, 0xd0, 0xb0, 0xeb, 0x9f, 0x94, 0x27, 0x6c, 0xe1, 0x6b, 0xd1, 0xbd, 0x73, 0x09, 0x22, 0x0d,
	0xf9, 0x1c, 0x20, 0x6b, 0x31, 0x42, 0x4b, 0x2e, 0xa5, 0xa6, 0xec, 0xbe, 0x73, 0x29, 0xa6, 0x10,
	0xd8, 0x36, 0xfe, 0xdc, 0xc0, 0xb3, 0xbf, 0x90, 0xf9, 0x81, 0x0b, 0x7f, 0x92, 0x34, 0xb0, 0x5d,
	0xcf, 0x73, 0x03, 0xcf, 0xee, 0xde, 0xf9, 0x81, 0x0b, 0xfb, 0x91, 0x2e, 0x90, 0x21, 0xb4, 0x66,
	0x77, 0x27, 0xb9, 0x5b, 0x72, 0x9c, 0xbb, 0xdc, 0xbb, 0xdb, 0x57, 0xe2, 0x6c, 0x92, 0x87, 0xf7,
	0x7e, 0x7c, 0x7f, 0xe4, 0xcb, 0x9f, 0xa6, 0xa7, 0xbd, 0x21, 0x0b, 0xfb, 0xca, 0xed, 0x9e, 0x1f,
	0x0d, 0xf5, 0xa9, 0x3f, 0x19, 0x8f, 0xf4, 0x97, 0xda, 0x7c, 0xbf, 0x4f, 0x97, 0x95, 0xf4, 0xe0,
	0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x76, 0x9b, 0x8e, 0x9f, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeldaClient is the client API for Kelda service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeldaClient interface {
	CreateWorkspace(ctx context.Context, in *CreateWorkspaceRequest, opts ...grpc.CallOption) (*CreateWorkspaceResponse, error)
	LogEvent(ctx context.Context, in *LogEventRequest, opts ...grpc.CallOption) (*LogEventResponse, error)
	GetLicense(ctx context.Context, in *GetLicenseRequest, opts ...grpc.CallOption) (*GetLicenseResponse, error)
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
	GetUpdates(ctx context.Context, in *GetUpdatesRequest, opts ...grpc.CallOption) (*GetUpdatesResponse, error)
	PerformUpdates(ctx context.Context, in *PerformUpdatesRequest, opts ...grpc.CallOption) (*PerformUpdatesResponse, error)
}

type keldaClient struct {
	cc *grpc.ClientConn
}

func NewKeldaClient(cc *grpc.ClientConn) KeldaClient {
	return &keldaClient{cc}
}

func (c *keldaClient) CreateWorkspace(ctx context.Context, in *CreateWorkspaceRequest, opts ...grpc.CallOption) (*CreateWorkspaceResponse, error) {
	out := new(CreateWorkspaceResponse)
	err := c.cc.Invoke(ctx, "/kelda.minion.v0.Kelda/CreateWorkspace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keldaClient) LogEvent(ctx context.Context, in *LogEventRequest, opts ...grpc.CallOption) (*LogEventResponse, error) {
	out := new(LogEventResponse)
	err := c.cc.Invoke(ctx, "/kelda.minion.v0.Kelda/LogEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keldaClient) GetLicense(ctx context.Context, in *GetLicenseRequest, opts ...grpc.CallOption) (*GetLicenseResponse, error) {
	out := new(GetLicenseResponse)
	err := c.cc.Invoke(ctx, "/kelda.minion.v0.Kelda/GetLicense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keldaClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/kelda.minion.v0.Kelda/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keldaClient) GetUpdates(ctx context.Context, in *GetUpdatesRequest, opts ...grpc.CallOption) (*GetUpdatesResponse, error) {
	out := new(GetUpdatesResponse)
	err := c.cc.Invoke(ctx, "/kelda.minion.v0.Kelda/GetUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keldaClient) PerformUpdates(ctx context.Context, in *PerformUpdatesRequest, opts ...grpc.CallOption) (*PerformUpdatesResponse, error) {
	out := new(PerformUpdatesResponse)
	err := c.cc.Invoke(ctx, "/kelda.minion.v0.Kelda/PerformUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeldaServer is the server API for Kelda service.
type KeldaServer interface {
	CreateWorkspace(context.Context, *CreateWorkspaceRequest) (*CreateWorkspaceResponse, error)
	LogEvent(context.Context, *LogEventRequest) (*LogEventResponse, error)
	GetLicense(context.Context, *GetLicenseRequest) (*GetLicenseResponse, error)
	GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	GetUpdates(context.Context, *GetUpdatesRequest) (*GetUpdatesResponse, error)
	PerformUpdates(context.Context, *PerformUpdatesRequest) (*PerformUpdatesResponse, error)
}

func RegisterKeldaServer(s *grpc.Server, srv KeldaServer) {
	s.RegisterService(&_Kelda_serviceDesc, srv)
}

func _Kelda_CreateWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeldaServer).CreateWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.minion.v0.Kelda/CreateWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeldaServer).CreateWorkspace(ctx, req.(*CreateWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kelda_LogEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeldaServer).LogEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.minion.v0.Kelda/LogEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeldaServer).LogEvent(ctx, req.(*LogEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kelda_GetLicense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeldaServer).GetLicense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.minion.v0.Kelda/GetLicense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeldaServer).GetLicense(ctx, req.(*GetLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kelda_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeldaServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.minion.v0.Kelda/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeldaServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kelda_GetUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpdatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeldaServer).GetUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.minion.v0.Kelda/GetUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeldaServer).GetUpdates(ctx, req.(*GetUpdatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kelda_PerformUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformUpdatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeldaServer).PerformUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kelda.minion.v0.Kelda/PerformUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeldaServer).PerformUpdates(ctx, req.(*PerformUpdatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kelda_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kelda.minion.v0.Kelda",
	HandlerType: (*KeldaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkspace",
			Handler:    _Kelda_CreateWorkspace_Handler,
		},
		{
			MethodName: "LogEvent",
			Handler:    _Kelda_LogEvent_Handler,
		},
		{
			MethodName: "GetLicense",
			Handler:    _Kelda_GetLicense_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _Kelda_GetVersion_Handler,
		},
		{
			MethodName: "GetUpdates",
			Handler:    _Kelda_GetUpdates_Handler,
		},
		{
			MethodName: "PerformUpdates",
			Handler:    _Kelda_PerformUpdates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kelda/minion/v0/minion.proto",
}
